// EXTRA

// Measur time of some method

long minDuration = Integer.MAX_VALUE;
long maxDuration = Integer.MIN_VALUE;
long totalDuration = 0;
int numberIterations = 1;
for(int k = 0; k < numberIterations; k++) {
    long startTime = System.nanoTime();

    // PLACE YOUR CODE HERE

    long endTime = System.nanoTime();
    long duration = (endTime - startTime)/1000;
    if(duration < minDuration)
        minDuration = duration;
    if(duration > maxDuration)
        maxDuration = duration;
    totalDuration += duration;
    this.getLogger().log(Level.WARNING, "[" + k + "] " + duration + "ms");
}
this.getLogger().log(Level.WARNING, "MAXIMUM DURATION: " + maxDuration + "ms");
this.getLogger().log(Level.WARNING, "MINIMUM DURATION: " + minDuration + "ms");
this.getLogger().log(Level.WARNING, "AVERAGE: " + (totalDuration / numberIterations) + "ms");

            String message = "§7[";
            int numberBars = (remainingTime  * 37) / ArenaStatus.LOBBY.getTime();
            for(int i = 0; i < numberBars; i++)
                message += "§a|";
            for(int i = 0; i < 37 - numberBars; i++)
                message += "§7|";
            message += " §a" + remainingTime + " ";
            for(int i = 0; i < 37 - numberBars; i++)
                message += "§7|";
            for(int i = 0; i < numberBars; i++)
                message += "§a|";
            message += "§7]";
            ActionBarAPI.sendActionBar(alvo, ConvertersAPI.convertToJSON(message));